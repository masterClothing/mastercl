const { Product, Category } = require("../models"); // ‚úÖ Ensure models are correctly imported

// ‚úÖ ÿ¨ŸÑÿ® ÿ¨ŸÖŸäÿπ ÿßŸÑŸÖŸÜÿ™ÿ¨ÿßÿ™
exports.getAllProducts = async (req, res) => {
  try {
    const products = await Product.findAll();
    res.json(products);
  } catch (error) {
    res.status(500).json({ message: "ÿÆÿ∑ÿ£ ÿ£ÿ´ŸÜÿßÿ° ÿ¨ŸÑÿ® ÿßŸÑŸÖŸÜÿ™ÿ¨ÿßÿ™", error });
  }
};

// ‚úÖ ÿ¨ŸÑÿ® ŸÖŸÜÿ™ÿ¨ Ÿàÿßÿ≠ÿØ ÿ≠ÿ≥ÿ® ID
exports.getProductById = async (req, res) => {
  try {
    const product = await Product.findByPk(req.params.id);
    if (!product) return res.status(404).json({ message: "ÿßŸÑŸÖŸÜÿ™ÿ¨ ÿ∫Ÿäÿ± ŸÖŸàÿ¨ŸàÿØ" });
    res.json(product);
  } catch (error) {
    res.status(500).json({ message: "ÿÆÿ∑ÿ£ ÿ£ÿ´ŸÜÿßÿ° ÿ¨ŸÑÿ® ÿßŸÑŸÖŸÜÿ™ÿ¨", error });
  }
};

// ‚úÖ ÿ¨ŸÑÿ® ÿßŸÑŸÖŸÜÿ™ÿ¨ÿßÿ™ ÿ≠ÿ≥ÿ® ÿßŸÑŸÅÿ¶ÿ© (Men, Women, Kids, Sale, New Arrivals)

// ‚úÖ ÿ¨ŸÑÿ® ÿßŸÑŸÖŸÜÿ™ÿ¨ÿßÿ™ ÿ≠ÿ≥ÿ® ÿßŸÑŸÅÿ¶ÿ© (Men, Women, Kids, Sale)
exports.getProductsByCategory = async (req, res) => {
  try {
    const categoryName = req.params.category; // ‚úÖ Ensure categoryName is defined

    console.log(`‚úÖ Fetching Products for Category: ${categoryName}`);

    // ‚úÖ ÿßÿ®ÿ≠ÿ´ ÿπŸÜ ÿßŸÑŸÅÿ¶ÿ© ŸÅŸä ŸÇÿßÿπÿØÿ© ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™
    const category = await Category.findOne({
      where: { name: categoryName },
    });

    if (!category) {
      return res.status(404).json({
        success: false,
        message: `‚ùå No category found with name: ${categoryName}`,
      });
    }

    // ‚úÖ ÿ¨ŸÑÿ® ÿßŸÑŸÖŸÜÿ™ÿ¨ÿßÿ™ ÿßŸÑÿ™Ÿä ÿ™ŸÜÿ™ŸÖŸä ŸÑŸáÿ∞Ÿá ÿßŸÑŸÅÿ¶ÿ©
    const products = await Product.findAll({
      where: { categoryId: category.id },
    });

    if (!products || products.length === 0) {
      return res.status(404).json({
        success: false,
        message: `‚ùå No products found in category: ${categoryName}`,
      });
    }

    res.json({ success: true, products });
  } catch (error) {
    console.error(
      `üî• Error fetching products for category: ${req.params.category}`, // ‚úÖ Now using `req.params.category`
      error
    );
    res.status(500).json({
      success: false,
      message: "üî• Error fetching products",
      error: error.message,
    });
  }
};

// ‚úÖ ÿ¨ŸÑÿ® ÿ¨ŸÖŸäÿπ ÿßŸÑŸÖŸÜÿ™ÿ¨ÿßÿ™ ÿßŸÑÿ¨ÿØŸäÿØÿ© (New Arrivals)
// ‚úÖ ÿ¨ŸÑÿ® ÿ¨ŸÖŸäÿπ ÿßŸÑŸÖŸÜÿ™ÿ¨ÿßÿ™ ÿßŸÑÿ¨ÿØŸäÿØÿ© (New Arrivals)
exports.getNewArrivals = async (req, res) => {
  try {
    console.log("Fetching new arrival products...");
    const newArrivals = await Product.findAll({
      where: { isNewArrival: true },
      logging: console.log, // Log the generated SQL query
    });

    if (!newArrivals || newArrivals.length === 0) {
      return res.status(404).json({
        success: false,
        message: "‚ùå No new arrival products found",
      });
    }

    res.json({ success: true, newArrivals });
  } catch (error) {
    console.error("üî• Error fetching new arrival products:", error);
    res.status(500).json({
      success: false,
      message: "üî• Error fetching new arrival products",
      error: error.message,
    });
  }
};